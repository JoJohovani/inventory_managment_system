generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String // 'admin', 'staff', etc.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sales     Sale[]
  purchases Purchase[]
  auditLog  AuditLog[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())

  products Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  quantity    Int
  image       String? // File path to image
  categoryId  Int
  createdAt   DateTime @default(now())

  category     Category       @relation(fields: [categoryId], references: [id])
  sales        Sale[]
  purchases    Purchase[]
  SalesItem    SalesItem[]
  PurchaseItem PurchaseItem[]
  inventoryLogs InventoryLog[]  // 

}

model Sale {
  id               Int      @id @default(autoincrement())
  purchasingUserId Int
  customerId       Int?
  totalPrice       Float
  createdAt        DateTime @default(now())

  purchasingUser User        @relation(fields: [purchasingUserId], references: [userId])
  customer       Customer?   @relation(fields: [customerId], references: [id])
  salesItems     SalesItem[]
  Product        Product?    @relation(fields: [productId], references: [id])
  productId      Int?
}

model Purchase {
  id         Int      @id @default(autoincrement())
  userId     Int
  supplierId Int
  totalCost  Float
  createdAt  DateTime @default(now())

  user           User           @relation(fields: [userId], references: [userId])
  supplierEntity Supplier       @relation(fields: [supplierId], references: [id])
  purchaseItems  PurchaseItem[]
  Product        Product?       @relation(fields: [productId], references: [id])
  productId      Int?
}

model Report {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  createdAt DateTime @default(now())
}

model SalesItem {
  id        Int   @id @default(autoincrement())
  saleId    Int
  productId Int
  quantity  Int
  price     Float

  sale    Sale    @relation(fields: [saleId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model PurchaseItem {
  id         Int   @id @default(autoincrement())
  purchaseId Int
  productId  Int
  quantity   Int
  cost       Float

  purchase Purchase @relation(fields: [purchaseId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])
}




model AuditLog {
  id          Int       @id @default(autoincrement())
  userId      Int?
  action      String    // e.g., "LOGIN", "LOGOUT", "CREATE_PRODUCT", etc.
  details     String?
  ipAddress   String?
  createdAt   DateTime  @default(now())

  user        User?     @relation(fields: [userId], references: [userId])
}

model Settings {
  id          Int       @id @default(1) // Single row for app config
  appName     String    @default("Inventory Management System")
  theme       String?   // e.g., "light", "dark"
  lowStockThreshold Int @default(5)
  updatedAt   DateTime  @updatedAt
}

//npx prisma generate
//npx prisma db push
//npx prisma studio